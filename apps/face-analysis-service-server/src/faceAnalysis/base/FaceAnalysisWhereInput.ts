/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { JsonFilter } from "../../util/JsonFilter";
import { EnumFaceAnalysisEyeColor } from "./EnumFaceAnalysisEyeColor";
import { FaceDetectionEventListRelationFilter } from "../../faceDetectionEvent/base/FaceDetectionEventListRelationFilter";
import { EnumFaceAnalysisFaceShape } from "./EnumFaceAnalysisFaceShape";
import { EnumFaceAnalysisGender } from "./EnumFaceAnalysisGender";
import { StringFilter } from "../../util/StringFilter";
import { EnumFaceAnalysisSkinTone } from "./EnumFaceAnalysisSkinTone";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";

@InputType()
class FaceAnalysisWhereInput {
  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  age?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  emotions?: JsonFilter;

  @ApiProperty({
    required: false,
    enum: EnumFaceAnalysisEyeColor,
  })
  @IsEnum(EnumFaceAnalysisEyeColor)
  @IsOptional()
  @Field(() => EnumFaceAnalysisEyeColor, {
    nullable: true,
  })
  eyeColor?: "Option1";

  @ApiProperty({
    required: false,
    type: () => FaceDetectionEventListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FaceDetectionEventListRelationFilter)
  @IsOptional()
  @Field(() => FaceDetectionEventListRelationFilter, {
    nullable: true,
  })
  faceDetectionEvents?: FaceDetectionEventListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumFaceAnalysisFaceShape,
  })
  @IsEnum(EnumFaceAnalysisFaceShape)
  @IsOptional()
  @Field(() => EnumFaceAnalysisFaceShape, {
    nullable: true,
  })
  faceShape?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumFaceAnalysisGender,
  })
  @IsEnum(EnumFaceAnalysisGender)
  @IsOptional()
  @Field(() => EnumFaceAnalysisGender, {
    nullable: true,
  })
  gender?: "Option1";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  imageUrl?: JsonFilter;

  @ApiProperty({
    required: false,
    enum: EnumFaceAnalysisSkinTone,
  })
  @IsEnum(EnumFaceAnalysisSkinTone)
  @IsOptional()
  @Field(() => EnumFaceAnalysisSkinTone, {
    nullable: true,
  })
  skinTone?: "Option1";

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  timestamp?: DateTimeNullableFilter;
}

export { FaceAnalysisWhereInput as FaceAnalysisWhereInput };
